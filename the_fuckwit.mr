import "engine_sim.mr"

units units()
constants constants()
impulse_response_library ir_lib()

label cycle(2 * 360 * units.deg)
label angle(60.0 /2.0*units.deg)

private node wires {
    output wire1: ignition_wire();
    output wire2: ignition_wire();
    output wire3: ignition_wire();
    output wire4: ignition_wire();
    output wire5: ignition_wire();
    output wire6: ignition_wire();
}

public node distributor {
    input wires;
    input timing_curve;
    input rev_limit: 11000 * units.rpm;
	input limiter_duration: 0.038 * units.sec;
    alias output __out:
        ignition_module(timing_curve: timing_curve, rev_limit: rev_limit, limiter_duration: 0.035)
            .connect_wire(wires.wire1, 0.0 / 6.0 * cycle)
            .connect_wire(wires.wire2, 1.0 / 6.0 * cycle)
            .connect_wire(wires.wire3, 2.0 / 6.0 * cycle)
            .connect_wire(wires.wire4, 3.0 / 6.0 * cycle)
            .connect_wire(wires.wire5, 4.0 / 6.0 * cycle)
            .connect_wire(wires.wire6, 5.0 / 6.0 * cycle);
}

public node chev_truck_454 {
    alias output __out: engine;

    wires wires()

    engine engine(
        name: "The Fuckwit",
        starter_torque: 200 * units.lb_ft,
        redline: 5500 * units.rpm,
        fuel: fuel(
            max_turbulence_effect: 3.0,
            burning_efficiency_randomness: 0.5,
            max_burning_efficiency: 0.85),
        throttle_gamma: 1.5
    )

    crankshaft c0(
        throw: 2.0 * units.inch,
        flywheel_mass: 10 * 2 * units.lb,
        mass: 95 * units.lb,
        friction_torque: 10.0 * units.lb_ft,
        moment_of_inertia: 0.22986844776863666 * 2,
        position_x: 0.0,
        position_y: 0.0,
        tdc: constants.pi / 4
    )

    label offset(10 * units.deg)
    rod_journal rj0(angle:  0.0 * constants.pi / 3)
    rod_journal rj1(angle: -2.0 * constants.pi / 3)
    rod_journal rj2(angle: -4.0 * constants.pi / 3)
    rod_journal rj3(angle:  0.0 * constants.pi / 3 - angle*1 - offset)
    rod_journal rj4(angle:  2.0 * constants.pi / 3 - angle*1 - offset)
    rod_journal rj5(angle:  4.0 * constants.pi / 3 - angle*1 - offset)

    c0
        .add_rod_journal(rj0)
        .add_rod_journal(rj3)
        .add_rod_journal(rj1)
        .add_rod_journal(rj4)
        .add_rod_journal(rj2)
        .add_rod_journal(rj5)

    piston_parameters piston_params(
        mass: 1000 * units.g,
        blowby: 0,
        compression_height: 1.5 * units.inch,
        wrist_pin_position: 0.0,
        displacement: 0.0
    )

    connecting_rod_parameters cr_params(
        mass: 785.0 * units.g,
        moment_of_inertia: 0.0015884918028487504,
        center_of_mass: 0.0,
        length: 6.135 * units.inch
    )

    cylinder_bank_parameters bank_params(
        bore: 4.25 * units.inch,
        deck_height: 9.8 * units.inch
    )

    chevy_bbc_stock_intake intake(
        carburetor_cfm: 650.0,
        idle_flow_rate_cfm: 0.007,
        idle_throttle_plate_position: 0.993
    )

    exhaust_system_parameters es_params(
        outlet_flow_rate: k_carb(550.0),
        primary_tube_length: 10.0 * units.inch,
        primary_flow_rate: k_carb(100.0),
        velocity_decay: 1.0, //0.5
        length: 100.0 * units.inch
    )

    label distance(5.0 * units.inch)

    exhaust_system exhaust0(
        es_params,
        length: (180 + 72.0) * units.inch,
        audio_volume: 5.5,
        impulse_response: ir_lib.default_0)
    exhaust_system exhaust1(
        es_params,
        length: 180.0 * units.inch,
        audio_volume: 5.5, 
        impulse_response: ir_lib.default_0)

    cylinder_bank b0(bank_params, angle: -angle)
    b0
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.2)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj0,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire1,
            primary_length: distance * 1,
            sound_attenuation: 0.9
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.6)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj1,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire3,
            primary_length: distance * 2,
            sound_attenuation: 1.1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.6)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj2,
            intake: intake,
            exhaust_system: exhaust1,
            ignition_wire: wires.wire2,
            primary_length: distance * 3,
            sound_attenuation: 1.1
        )



    cylinder_bank b1(bank_params, angle: angle)
    b1
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.2)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj3,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire1,
            primary_length: distance * 4,
            sound_attenuation: 0.9
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.2)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj4,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire3,
            primary_length: distance * 5,
            sound_attenuation: 1.1
        )
        .add_cylinder(
            piston: piston(piston_params, blowby: k_28inH2O(0.6)),
            connecting_rod: connecting_rod(cr_params),
            rod_journal: rj5,
            intake: intake,
            exhaust_system: exhaust0,
            ignition_wire: wires.wire2,
            primary_length: distance * 6,
            sound_attenuation: 0.8
        )


    engine
        .add_cylinder_bank(b0)
        .add_cylinder_bank(b1)


    engine.add_crankshaft(c0)

    chevy_454_stock_camshaft camshaft()

    b0.set_cylinder_head (
        chevy_bbc_peanut_port_head(
            intake_camshaft: camshaft.intake_cam_0,
            exhaust_camshaft: camshaft.exhaust_cam_0
        )
    )
    b1.set_cylinder_head (
        chevy_bbc_peanut_port_head(
            intake_camshaft: camshaft.intake_cam_1,
            exhaust_camshaft: camshaft.exhaust_cam_1,
            flip_display: true
        )
    )

    function timing_curve(1000 * units.rpm)
    timing_curve
        .add_sample(0000 * units.rpm, 12 * units.deg)
        .add_sample(1000 * units.rpm, 12 * units.deg)
        .add_sample(2000 * units.rpm, 20 * units.deg)
        .add_sample(3000 * units.rpm, 30 * units.deg)
        .add_sample(4000 * units.rpm, 38 * units.deg)
        .add_sample(5000 * units.rpm, 38 * units.deg)
        .add_sample(6000 * units.rpm, 38 * units.deg)

    engine.add_ignition_module(
        distributor(
            wires: wires,
            timing_curve: timing_curve,
            rev_limit: 7000 * units.rpm
        )
    )
}

private node corvette {
    alias output __out:
        vehicle(
            mass: 1614 * units.kg,
            drag_coefficient: 0.3,
            cross_sectional_area: (72 * units.inch) * (50 * units.inch),
            diff_ratio: 3.42,
            tire_radius: 16 * units.inch,
            rolling_resistance: 200 * units.N,
            stiffness: 50 * units.lb_ft / units.deg,
            damping: 15.0,
            max_flex: 5 * units.deg,
            limit_flex: true,
            simulate_flex: true
        );
}

private node corvette_transmission {
    alias output __out:
        transmission(
            max_clutch_torque: 600 * units.lb_ft,
            max_clutch_flex: 5 * units.deg,
            limit_clutch_flex: true,
            clutch_stiffness: 50 * units.lb_ft / units.deg,
            clutch_damping: 2.0,
            simulate_flex: true
        )
        .add_gear(2.97)
        .add_gear(2.07)
        .add_gear(1.43)
        .add_gear(1.00)
        .add_gear(0.71)
        .add_gear(0.57);
}

public node main {
    set_engine(chev_truck_454())
    set_vehicle(corvette())
    set_transmission(corvette_transmission())
}

main()
